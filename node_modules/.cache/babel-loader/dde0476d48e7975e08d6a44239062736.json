{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dashboard\\\\material-kit-react-main\\\\src\\\\pages\\\\BlogPage.js\";\nimport { Helmet } from 'react-helmet-async';\n// @mui\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Iconify from '../components/iconify';\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../sections/@dashboard/blog';\n// mock\nimport POSTS from '../_mock/blog';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SORT_OPTIONS = [{\n  value: 'latest',\n  label: 'Latest'\n}, {\n  value: 'popular',\n  label: 'Popular'\n}, {\n  value: 'oldest',\n  label: 'Oldest'\n}];\n\n// ----------------------------------------------------------------------\n\nexport default function BlogPage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" Dashboard: Blog | Minimal UI \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: 5,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Iconify, {\n            icon: \"eva:plus-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 50\n          }, this),\n          children: \"New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        mb: 5,\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(BlogPostsSearch, {\n          posts: POSTS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlogPostsSort, {\n          options: SORT_OPTIONS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: POSTS.map((post, index) => /*#__PURE__*/_jsxDEV(BlogPostCard, {\n          post: post,\n          index: index\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = BlogPage;\nvar _c;\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"names":["Helmet","Grid","Button","Container","Stack","Typography","Iconify","BlogPostCard","BlogPostsSort","BlogPostsSearch","POSTS","jsxDEV","_jsxDEV","Fragment","_Fragment","SORT_OPTIONS","value","label","BlogPage","children","fileName","_jsxFileName","lineNumber","columnNumber","direction","alignItems","justifyContent","mb","variant","gutterBottom","startIcon","icon","posts","options","container","spacing","map","post","index","id","_c","$RefreshReg$"],"sources":["D:/Dashboard/material-kit-react-main/src/pages/BlogPage.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Iconify from '../components/iconify';\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../sections/@dashboard/blog';\n// mock\nimport POSTS from '../_mock/blog';\n\n// ----------------------------------------------------------------------\n\nconst SORT_OPTIONS = [\n  { value: 'latest', label: 'Latest' },\n  { value: 'popular', label: 'Popular' },\n  { value: 'oldest', label: 'Oldest' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function BlogPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Blog | Minimal UI </title>\n      </Helmet>\n\n      <Container>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            Blog\n          </Typography>\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\n            New Post\n          </Button>\n        </Stack>\n\n        <Stack mb={5} direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <BlogPostsSearch posts={POSTS} />\n          <BlogPostsSort options={SORT_OPTIONS} />\n        </Stack>\n\n        <Grid container spacing={3}>\n          {POSTS.map((post, index) => (\n            <BlogPostCard key={post.id} post={post} index={index} />\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}